---
import { Icon } from "astro-icon/components"
import Header from "@components/Header.astro"
import HeaderTag from "@components/blog/HeaderTag.astro"
import Document from "@layouts/Document.astro"
import { formatDate } from "@shared/date"
import { publishedPosts, type Post, findPrevNextPosts, uniqueKeywords } from "@shared/posts"
import Share from "@components/blog/Share.astro"
import NextPrevPosts from "@components/blog/NextPrevPosts.astro"
import Markdown from "@components/Markdown.astro"

export async function getStaticPaths() {
    const posts = await publishedPosts()
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: post,
    }))
}
type Props = Post

const posts = await publishedPosts()

const post = Astro.props
const current = post.data
const { previous, next } = findPrevNextPosts(post.slug, posts)
const { Content } = await post.render()
---

<Document
    metadata={{
        title: current.title,
        description: current.description,
        keywords: uniqueKeywords(current),
    }}
>
    <Header />
    <article>
        <header class="mb-6">
            <h1 class="mb-3 font-bold">{current.title}</h1>
            <div class="flex gap-2 text-sm items-center flex-wrap">
                <HeaderTag text={formatDate(current.date)}>
                    <Icon slot="icon" name="calendar" />
                </HeaderTag>
                {
                    current.updatedOn && (
                        <HeaderTag text={`Updated on ${formatDate(current.updatedOn)}`}>
                            <Icon slot="icon" name="pencil-square" />
                        </HeaderTag>
                    )
                }
                <HeaderTag text={current.readingTime}>
                    <Icon slot="icon" name="clock" />
                </HeaderTag>
            </div>
        </header>
        <Markdown Content={Content} />
        <hr class="my-5 pb-0 border-t-3 border-dashed border-t-gray-500" />
        <footer class="mb-2">
            {current.status === "published" && <Share post={current} />}
            <NextPrevPosts previous={previous?.data} next={next?.data} />
        </footer>
    </article>
</Document>
